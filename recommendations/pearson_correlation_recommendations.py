import pandas as pd
from treating_data.items_ratings_treated import items, ratings

def filtering_ratings_based_on_items(items: pd.DataFrame, ratings: pd.DataFrame) -> pd.DataFrame:
    # print(ratings[ratings['movieId'].isin(items["movieId"])])
    return ratings[ratings['movieId'].isin(items["movieId"])]

def build_pearson_similarity_matrix(rating_matrix: pd.DataFrame) -> pd.DataFrame:

    similarity_between_movies = rating_matrix.corr(method='pearson')

    return similarity_between_movies

def generate_recommendation(rating_matrix: pd.DataFrame, movieId: int) -> list:
    pearson_similarity_matrix = build_pearson_similarity_matrix(rating_matrix=rating_matrix)

    list_of_recommendations = pearson_similarity_matrix[movieId].sort_values(ascending=False).iloc[1:6].index

    result = [items[items['movieId'] == recommendation]['title'].iloc[0] for recommendation in list_of_recommendations]

    return result

if __name__ == '__main__':
    ratings_filtered = filtering_ratings_based_on_items(items=items, ratings=ratings)

    recommendations = generate_recommendation(rating_matrix=rating_matrix, movieId=58559) # this id goes for the dark knight

    print(f"Recommendations for the movie {items[items['movieId'] == 58559]['title'].iloc[0]}:")

    for recommendation in recommendations:
        print(items[items['movieId'] == recommendation]['title'].iloc[0])

    print("These recommendations were generated by Pearson Correlation Coefficient!")
