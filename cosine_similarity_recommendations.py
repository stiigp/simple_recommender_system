import pandas as pd
from user_rating_matrix import generate_rating_matrix
from sklearn.metrics.pairwise import cosine_similarity

items = pd.read_csv('ml-latest-small/movies.csv', delimiter=',', names=['movieId', 'title', 'genres'])
ratings = pd.read_csv('ml-latest-small/ratings.csv', delimiter=',', names=["userId","movieId","rating","timestamp"])

# convertendo algumas séries em numérico por estarem em str
ratings['rating'] = pd.to_numeric(ratings['rating'], errors="coerce")
ratings['userId'] = pd.to_numeric(ratings['userId'], errors="coerce")
ratings['movieId'] = pd.to_numeric(ratings['movieId'], errors="coerce")

items['movieId'] = pd.to_numeric(items['movieId'], errors="coerce")

def build_cosine_similarity_matrix(user_rating_matrix: pd.DataFrame) -> pd.DataFrame:
    # aqui usamos a matriz transposta pois a funcao cosine_similarity calcula a similaridade entre as linhas
    # e queremos calcular a similaridade entre os filmes, nao os usuarios
    similarity_between_movies = cosine_similarity(user_rating_matrix.T)

    df_similarity_between_movies = pd.DataFrame(similarity_between_movies, index=user_rating_matrix.columns, columns=user_rating_matrix.columns)

    return df_similarity_between_movies

def generate_recommendations(similarity_matrix: pd.DataFrame, movie_id: int) -> pd.Series:
    list_of_recommendations = similarity_matrix[movie_id].sort_values(ascending=False)

    return list_of_recommendations.iloc[:6]

user_rating_matrix = generate_rating_matrix(ratings=ratings)

similarity_matrix = build_cosine_similarity_matrix(user_rating_matrix=user_rating_matrix)

# print(similarity_matrix.head())
# print(max(similarity_matrix[2]))

recommendations = generate_recommendations(similarity_matrix=similarity_matrix, movie_id=58559)


print(f"Recommendations for the movie {items[items['movieId'] == recommendations.index[0]]['title'].iloc[0]}:")
# print(items[items['movieId'] == recommendations.index[0]]['title'].iloc[0])

for movieId in recommendations.index[1:]:
    print(items[items['movieId'] == movieId]["title"].iloc[0])

print("These recommendations were generated by cosine similarity!")
